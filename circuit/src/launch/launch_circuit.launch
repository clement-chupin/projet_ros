<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find circuit)/src/worlds/world.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find circuit)/src/urdf/race_track.urdf.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model race_track -param robot_description"/>



  <rosparam file="$(find circuit)/src/config/race_track.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/race_track" args="joint_state_controller
					  joint1_position_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
	respawn="false" output="screen">
    <remap from="/joint_states" to="/race_track/joint_states" />
  </node>




<!-- <param name="robot_description_1" command="$(find xacro)/xacro '$(find circuit)/src/urdf/mobile_robot.urdf.xacro obot_index:=1'"/> 


<param name="robot_description_1" command="$(find xacro)/xacro $(find circuit)/src/urdf/mobile_robot.urdf.xacro
  robot_index:=1 robot_color:=red
  "/>  
  <node name="mobile_robot_1" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description_1 -z 1 -model mobile_robot_1" />
  <node name="$(anon control_the_bot_1)" pkg="circuit" type="sensor_car.py" output="screen" respawn="true">
    <param name="robot_index" value="1" /> 
  </node> -->












  <!-- <param name="robot_description_2" command="$(find xacro)/xacro $(find circuit)/src/urdf/mobile_robot.urdf.xacro
  robot_index:=2
  "/>  
  <node name="mobile_robot_2" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description_2 -x -4 -z 1 -model mobile_robot_2" />
  <node name="$(anon control_the_bot_2)" pkg="circuit" type="sensor_car.py" output="screen" respawn="true">
    <param name="robot_index" value="2" /> 
  </node>


 -->

</launch>